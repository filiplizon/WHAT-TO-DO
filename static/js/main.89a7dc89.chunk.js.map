{"version":3,"sources":["theme/theme.js","atoms/atoms.js","components/Details/Details.js","components/Filter/Filter.js","components/DetailsPanel/DetailsPanel.js","components/Logo/Logo.js","components/Navigation/Navigation.js","components/ToDoItem/ToDoItem.js","components/ToDoList/ToDoList.js","components/NewItemBar/NewItemBar.js","views/UserPage/UserPage.js","components/CloseButton/CloseButton.js","assets/images/illustration.svg","views/ItemPage/ItemPage.js","components/Preloader/Preloader.js","App.js","index.js"],"names":["colors","text","background","primary","fonts","body","heading","fontSizes","fontWeights","regular","bold","fontWeight","color","buttons","display","justifyContent","alignItems","p","bg","outlineColor","transitionDuration","cursor","secondary","borderRadius","fontSize","forms","label","input","borderBottom","borderColor","boxShadow","textarea","fontFamily","resize","shadows","styles","root","breakpoints","toDosState","atom","key","default","selector","get","a","fetch","response","json","data","todoListFilterState","searchInputValueState","filteredTodoListState","filter","list","inputValue","completed","title","includes","toLowerCase","toDoListDetailsState","todoList","totalNum","length","totalCompletedNum","totalUncompletedNum","currentItemState","charCountState","Details","useRecoilValue","as","sx","listStyle","Filter","useRecoilState","setFilter","width","flexDirection","htmlFor","mb","id","onChange","value","target","DetailsPanel","isOpen","position","right","mt","theme","borderLeft","transform","transition","zIndex","Logo","Navigation","useState","setDetailsBoxOpen","setSearchInput","useSetRecoilState","height","top","px","gridTemplateColumns","justifyItems","backgroundColor","name","onClick","placeholder","replaceItemAtIndex","arr","index","newValue","slice","ToDoItem","item","redirect","setRedirect","setId","setTodoList","currentItem","setCurrentItem","setCharCounter","findIndex","listItem","to","closest","find","toDo","toString","gridTemplateRows","overflow","opacity","bottom","py","borderEndEndRadius","overflowX","variant","mr","newList","removeItemAtIndex","defaultValue","editItemText","alignSelf","border","lineHeight","ToDoList","toDosItems","map","minHeight","gap","Sidebar","isVisible","toggleNewItemBarVisibilityFn","setInputValue","textAreaValue","setTextAreaValue","setToDos","alignContent","prevState","mx","UserPage","setNewItemBarVisibility","e","preventDefault","NewItemBar","CloseButton","ItemPage","pt","pb","left","textAlign","src","Illustration","preload","keyframes","from","Preloader","animation","App","Suspense","fallback","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"uLAAe,GACbA,OAAQ,CACNC,KAAM,OACNC,WAAY,OACZC,QAAS,QAEXC,MAAO,CACLC,KAAM,iGACNC,QAAS,WAEXC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxCC,YAAa,CACXC,QAAS,IACTC,KAAM,KAERT,KAAM,CACJK,QAAS,CACPK,WAAY,OACZC,MAAO,YAGXC,QAAS,CACPV,QAAS,CACPW,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,EAAG,MACHC,GAAI,UACJN,MAAO,aACPO,aAAc,UACdC,mBAAoB,MACpBC,OAAQ,WAEVC,UAAW,CACTR,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,EAAG,MACHM,aAAc,MACdJ,aAAc,UACdC,mBAAoB,MACpBC,OAAQ,UACRG,SAAU,EACVN,GAAI,aACJN,MAAO,YAGXa,MAAO,CACLC,MAAO,CACLf,WAAY,QAEdgB,MAAO,CACLC,aAAc,YACdC,YAAa,UACbV,aAAc,UACdW,UAAW,WAEbC,SAAU,CACRC,WAAY,OACZJ,aAAc,YACdC,YAAa,UACbV,aAAc,UACdW,UAAW,UACXG,OAAQ,SAGZC,QAAS,CACP/B,QAAS,0CAEXgC,OAAQ,CACNC,KAAM,CACJJ,WAAY,OACZrB,WAAY,YAGhB0B,YAAa,CAAC,QAAS,QAAS,SAAU,W,wCCzE/BC,EAAaC,YAAK,CAC7BC,IAAK,aACLC,QAASC,YAAS,CAChBF,IAAK,gBACLG,IAAI,WAAD,4BAAE,gCAAAC,EAAA,sEACoBC,MAAM,yCAD1B,cACGC,EADH,gBAEoBA,EAASC,OAF7B,uBAEKC,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,2CAAF,kDAAC,OAQKC,EAAsBV,YAAK,CACtCC,IAAK,sBACLC,QAAS,aAGES,EAAwBX,YAAK,CACxCC,IAAK,mBACLC,QAAS,KAGEU,EAAwBT,YAAS,CAC5CF,IAAK,wBACLG,IAAK,YAAc,IAAXA,EAAU,EAAVA,IACAS,EAAST,EAAIM,GACbI,EAAOV,EAAIL,GACXgB,EAAaX,EAAIO,GAEvB,OAAQE,GACN,IAAK,iBACH,OAAOC,EAAKD,QACV,gBAAGG,EAAH,EAAGA,UAAWC,EAAd,EAAcA,MAAd,OAA0BD,GAAaC,EAAMC,SAASH,EAAWI,kBAErE,IAAK,mBACH,OAAOL,EAAKD,QACV,gBAAGG,EAAH,EAAGA,UAAWC,EAAd,EAAcA,MAAd,OAA2BD,GAAaC,EAAMC,SAASH,EAAWI,kBAEtE,IAAK,oBACH,OAAOL,EAAKD,QAAO,qBAAGI,MAAkBE,cAAcD,SAASH,EAAWI,kBAC5E,QACE,OAAOL,MAKFM,EAAuBjB,YAAS,CAC3CF,IAAK,qBACLG,IAAK,YAAc,IACXiB,GAAWjB,EADD,EAAVA,KACeL,GACfuB,EAAWD,EAASE,OACpBC,EAAoBH,EAASR,QAAO,qBAAGG,aAA2BO,OAGxE,MAAO,CACLD,WACAE,oBACAC,oBAL0BH,EAAWE,MAU9BE,EAAmB1B,YAAK,CACnCC,IAAK,mBACLC,QAAS,KAGEyB,EAAiB3B,YAAK,CACjCC,IAAK,iBACLC,QAASC,YAAS,CAChBF,IAAK,oBACLG,IAAK,YAGH,OAFaA,EADG,EAAVA,KACWsB,GAELH,Y,OCrDHK,EAlBC,WACd,MAA6DC,YAAeT,GAApEE,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,kBAAmBC,EAArC,EAAqCA,oBAErC,OACE,+BACE,eAAC,IAAD,CAAWK,GAAG,KAAKC,GAAI,CAAEC,UAAW,QAApC,0BACgBV,KAEhB,eAAC,IAAD,CAAWQ,GAAG,KAAKC,GAAI,CAAEC,UAAW,QAApC,8BACoBR,KAEpB,eAAC,IAAD,CAAWM,GAAG,KAAKC,GAAI,CAAEC,UAAW,QAApC,kCACwBP,SCyBfQ,EArCA,WACb,MAA4BC,YAAexB,GAA3C,mBAAOG,EAAP,KAAesB,EAAf,KAMA,OACE,eAAC,IAAD,CACEJ,GAAI,CACFK,MAAO,MACPC,cAAe,UAHnB,UAME,cAAC,IAAD,CACEC,QAAQ,SACRP,GAAI,CACFQ,GAAI,OACJnE,WAAY,WAJhB,qBASA,eAAC,IAAD,CACEoE,GAAG,SACHC,SAtBe,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MAChCP,EAAUO,IAsBNA,MAAO7B,EACPkB,GAAI,CAAErD,EAAG,OAAQE,aAAc,WAJjC,UAME,wBAAQ8D,MAAM,oBAAd,iBACA,wBAAQA,MAAM,iBAAd,uBACA,wBAAQA,MAAM,mBAAd,gCCLOE,EA1BM,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACnB,eAAC,IAAD,CACEd,GAAI,CACFe,SAAU,QACVC,MAAO,EACPX,MAAO,CAAC,OAAQ,KAAM,KAAM,MAAO,OACnC1D,EAAG,OACHsE,GAAI,OACJ3D,aAAc,SAAC4D,GAAD,0BAAwBA,EAAMxF,OAAOG,UACnDsF,WAAY,SAACD,GAAD,MAAW,CAAC,KAAM,KAAM,KAAb,oBAAgCA,EAAMxF,OAAOG,WACpEyE,cAAe,CAAC,SAAU,KAAM,OAChC5D,WAAY,SACZD,eAAgB,eAChBS,SAAU,CAAC,KAAM,KAAM,GACvBN,GAAI,aACJN,MAAO,UACP8E,UAAWN,EAAS,gBAAkB,oBACtCO,WAAY,4BACZC,OAAQ,KAjBZ,UAoBE,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCNWC,EAlBF,kBACX,eAAC,IAAD,CACEvB,GAAI,CACF3D,WAAY,OACZa,SAAU,CAAC,EAAG,KAAM,EAAG,IAH3B,UAME,cAAC,IAAD,oBACA,cAAC,IAAD,CACE8C,GAAI,CACF1D,MAAO,WAFX,uBC0DWkF,EA7DI,WACjB,MAAoCC,oBAAS,GAA7C,mBAAOX,EAAP,KAAeY,EAAf,KACMC,EAAiBC,YAAkBhD,GACnCwB,EAAYwB,YAAkBjD,GAUpC,OACE,qCACE,cAAC,EAAD,CAAcmC,OAAQA,IACtB,eAAC,IAAD,CACEf,GAAG,MACHC,GAAI,CACFK,MAAO,QACPwB,OAAQ,OACRd,SAAU,QACVe,IAAK,EACLC,GAAI,MACJC,oBAAqB,CAAC,qBAAsB,KAAM,kBAClDtF,WAAY,SACZuF,aAAc,SACdC,gBAAiB,aACjB1E,UAAW,UACX8D,OAAQ,KAbZ,UAgBE,cAAC,EAAD,IACA,cAAC,IAAD,CACEa,KAAK,oBACLC,QA1Ba,SAAC,GAA0B,IAAdD,EAAa,EAAvBvB,OAAUuB,KAChC/B,EAAU+B,IA0BJzB,SA/BkB,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MACrCgB,EAAehB,IA+BT0B,YAAY,SACZrC,GAAI,CACFK,MAAO,CAAC,OAAQ,KAAM,KAAM,KAAM,OAClCnD,SAAU,CAAC,EAAG,KAAM,MAGxB,cAAC,IAAD,CACEkF,QAAS,kBAAMV,GAAmBZ,IAClCd,GAAI,CACFK,MAAO,CAAC,OAAQ,KAAM,OAAQ,QAC9BwB,OAAQ,CAAC,OAAQ,KAAM,OAAQ,QAC/B5E,aAAc,MACdC,SAAU,CAAC,EAAG,GACdkE,UAAWN,EAAS,iBAAmB,YACvCO,WAAY,6BARhB,SAWE,cAAC,IAAD,a,uCCnDJiB,EAAqB,SAACC,EAAKC,EAAOC,GAAb,4BACtBF,EAAIG,MAAM,EAAGF,IADS,CAEzBC,GAFyB,YAGtBF,EAAIG,MAAMF,EAAQ,MAoJRG,EAjJE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,EAAgCnB,oBAAS,GAAzC,mBAAOoB,EAAP,KAAiBC,EAAjB,KACA,EAAoBrB,mBAAS,IAA7B,mBAAOhB,EAAP,KAAWsC,EAAX,KACA,EAAgC5C,YAAenC,GAA/C,mBAAOsB,EAAP,KAAiB0D,EAAjB,KACA,EAAsC7C,YAAeR,GAArD,mBAAOsD,EAAP,KAAoBC,EAApB,KACMC,EAAiBvB,YAAkBhC,GACnC4C,EAAQlD,EAAS8D,WAAU,SAACC,GAAD,OAAcA,IAAaT,KAmC5D,OAAIC,EACK,cAAC,IAAD,CAAUS,GAAE,sBAAiB7C,KAIpC,eAAC,IAAD,CACE2B,QAlBoB,SAAC,GAAgB,IAC/B3B,EAD8B,EAAbG,OACH2C,QAAQ,MAAtB9C,GACFwC,EAAc3D,EAASkE,MAAK,SAACC,GAAD,OAAUA,EAAKhD,GAAGiD,aAAejD,KACnEsC,EAAMtC,GACNyC,EAAeD,GACfE,EAAeF,EAAY/D,MAAMM,SAc/BO,GAAG,KACHU,GAAImC,EAAKnC,GACTxB,UAAW2D,EAAK3D,UAChBe,GAAI,CACFe,SAAU,WACVc,OAAQ,CAAC,OAAQ,KAAM,QACvBxB,MAAO,CAAC,OAAQ,KAAM,OAAQ,QAC9B7D,QAAS,OACTmH,iBAAkB,YAClBnD,GAAI,OACJhD,UAAW,UACX6D,WAAY,gBACZuC,SAAU,SACVC,QAASjB,EAAK3D,WAAa,GAC3BlC,OAAQ,UACR,UAAW,CAAEqE,UAAW,cAAeyC,QAASjB,EAAK3D,WAAa,IAjBtE,UAoBE,eAAC,IAAD,CAAMe,GAAI,CAAEe,SAAU,WAAY+C,OAAQ,MAAO9C,MAAO,MAAO9D,SAAU,GAAzE,oBACU0F,EAAK1D,MAAMM,UAErB,eAAC,IAAD,CACEO,GAAG,SACHC,GAAI,CACFvD,eAAgB,gBAChBC,WAAY,SACZqF,GAAI,OACJgC,GAAI,MACJC,mBAAoB,OACpB9B,gBAAiB,UACjB5F,MAAO,cATX,UAYE,cAAC,IAAD,CACE0D,GAAI,CACF1D,MAAO,aACP+D,MAAO,MACPnD,SAAU,CAAC,KAAM,KAAM,GACvB+G,UAAW,UALf,SAQGrB,EAAKT,KAAOS,EAAKT,KAAO,UAG3B,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,QAzDa,WACrBU,GAAaD,IAyDLqB,QAAQ,YACRlE,GAAI,CACFmE,GAAI,QAJR,SAOE,cAAC,IAAD,MAEF,cAAC,IAAD,CACExD,MAAM,aACNyB,QAhGS,WACjB,IAAMgC,EAjBgB,SAAC7B,EAAKC,GAAN,4BAAoBD,EAAIG,MAAM,EAAGF,IAAjC,YAA4CD,EAAIG,MAAMF,EAAQ,KAiBpE6B,CAAkB/E,EAAUkD,GAC5CQ,EAAYoB,IA+FJF,QAAQ,YACRlE,GAAI,CACFmE,GAAI,OACJ,UAAW,CAAE7H,MAAO,QANxB,SASE,cAAC,IAAD,MAEF,cAAC,IAAD,CACEqE,MAAM,aACNyB,QA9FmB,WAC3B,IAAMgC,EAAU9B,EAAmBhD,EAAUkD,EAAX,YAAC,eAC9BI,GAD6B,IAEhC3D,WAAY2D,EAAK3D,aAEnB+D,EAAYoB,IA0FJF,QAAQ,YACRlE,GAAI,CACFpD,GAAIgG,EAAK3D,WAAa,UACtB3C,MAAOsG,EAAK3D,WAAa,aACzB,UAAW,CAAEiD,gBAAiB,UAAW5F,MAAO,eAPpD,SAUE,cAAC,IAAD,YAIN,cAAC,IAAD,CACEgI,aAAc1B,EAAK1D,MACnBwB,SAAU,mBApHK,SAACC,GACpB,IAAMyD,EAAU9B,EAAmBhD,EAAUkD,EAAX,YAAC,eAC9BS,GAD6B,IAEhC/D,MAAOyB,KAETqC,EAAYoB,GA+G6BG,CAA3B,EAAG3D,OAAUD,QACvBX,GAAI,CACFK,MAAO,OACPwB,OAAQ,OACR2C,UAAW,SACXC,OAAQ,OACR9H,EAAG,OACH+H,WAAY,OACZxH,SAAU,CAAC,KAAM,EAAG,EAAG,GACvBL,aAAc,qBCtHT8H,EA/BE,WACf,IACMC,EADQ9E,YAAejB,GACJgG,KAAI,SAACjC,GAAD,OAAU,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKnC,OAE3D,OACE,cAAC,IAAD,CACEV,GAAG,OACHC,GAAI,CACFvD,eAAgB,UAHpB,SAME,cAAC,IAAD,CACEsD,GAAG,KACHC,GAAI,CACFK,MAAO,CAAC,OAAQ,KAAM,OACtByE,UAAW,OACX9C,oBAAqB,CAAC,MAAO,KAAM,iBAAkB,kBACrD+C,IAAK,CAAC,KAAM,KAAM,QAClB9D,GAAI,OACJc,GAAI,CAAC,MAAO,KAAM,GAClBgC,GAAI,MACJrH,WAAY,SACZuF,aAAc,SACdX,OAAQ,GAZZ,SAeGsD,OC3BLnE,EAAK,IA4JMuE,EAzJC,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,6BAC5B,EAAoCzD,mBAAS,IAA7C,mBAAOzC,EAAP,KAAmBmG,EAAnB,KACA,EAA0C1D,mBAAS,IAAnD,mBAAO2D,EAAP,KAAsBC,EAAtB,KACMC,EAAW1D,YAAkB5D,GAwBnC,OACE,mCACE,eAAC,IAAD,CACEgC,GAAI,CACFK,MAAO,CAAC,QAAS,KAAM,OAAQ,KAAM,QACrCwB,OAAQ,QACRd,SAAU,QACVe,IAAK,EACLd,MAAO,EACP2C,iBAAkB,CAAC,aAAc,KAAM,iBACvC5B,GAAI,CAAC,MAAO,KAAM,KAAM,OACxBgC,GAAI,OACJ5C,WAAY,CAAC,KAAM,KAAM,cACzB5D,YAAa,UACbX,GAAI,aACJN,MAAO,UACP8E,UAAW6D,EAAY,gBAAkB,mBACzC5D,WAAY,4BACZC,OAAQ,KAhBZ,UAmBE,eAAC,IAAD,CACEtB,GAAI,CACFK,MAAO,OACP5D,eAAgB,gBAChBC,WAAY,SACZY,aAAc,YACdC,YAAa,WANjB,UASE,cAAC,IAAD,CACEwC,GAAG,KACHC,GAAI,CACF9C,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,IAH3B,sBAQA,cAAC,IAAD,CACEkF,QAAS8C,EACTlF,GAAI,CACFjD,OAAQ,UACRsE,WAAY,iBACZ,UAAW,CACTD,UAAW,oBAKnB,eAAC,IAAD,CACEpB,GAAI,CACF2D,iBAAkB,CAAC,oBAAqB,KAAM,qBAC9C1C,GAAI,CAAC,OAAQ,KAAM,UAHvB,UAME,eAAC,IAAD,CACEjB,GAAI,CACFuF,aAAc,UAFlB,UAKE,cAAC,IAAD,CACEvF,GAAI,CACF9C,SAAU,CAAC,EAAG,EAAG,EAAG,KAAM,GAC1BsD,GAAI,OAHR,oBAQA,cAAC,IAAD,CACEE,SA5Ec,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MACrCwE,EAAcxE,IA4EJA,MAAO3B,EACPqD,YAAY,QACZrC,GAAI,CACF9C,SAAU,CAAC,EAAG,EAAG,EAAG,KAAM,GAC1BN,GAAI,mBAIV,eAAC,IAAD,WACE,cAAC,IAAD,CACEoD,GAAI,CACF9C,SAAU,CAAC,EAAG,EAAG,EAAG,KAAM,GAC1BsD,GAAI,OAHR,mBAQA,cAAC,IAAD,CACEG,MAAOyE,EACP1E,SA7FiB,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MACxC0E,EAAiB1E,IA6FPX,GAAI,CACF6B,OAAQ,MACR3E,SAAU,CAAC,EAAG,EAAG,EAAG,KAAM,GAC1BN,GAAI,mBAIV,cAAC,IAAD,CACEwF,QAAS,WAvHjBgD,GACEE,GAAS,SAACE,GAAD,OACP,CACE/E,GAXUA,IAYV0B,KAAMnD,GAA0B,QAChCE,MAAOkG,EACPnG,WAAW,IALN,mBAOJuG,OAEPH,EAAiB,IACjBF,EAAc,IA8GJD,KAEFhB,QAAQ,YACRlE,GAAI,CACFK,MAAO,MACPwB,OAAQ,CAAC,OAAQ,KAAM,KAAM,OAAQ,QACrC2C,UAAW,SACXvH,aAAc,MACdwI,GAAI,OACJvI,SAAU,CAAC,KAAM,KAAM,EAAG,EAAG,GAC7BN,GAAI,UACJN,MAAO,aACPkB,UAAW,UACX,UAAW,CACT4D,UAAW,eAjBjB,0BC1FKsE,EApCE,WACf,MAA6CjE,oBAAS,GAAtD,mBAAOwD,EAAP,KAAkBU,EAAlB,KAEA,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAD,CACEvD,QAAS,SAACwD,GACRX,EAAYW,EAAEC,iBAAmBF,GAAyBV,IAE5DjF,GAAI,CACFK,MAAO,CAAC,OAAQ,KAAM,OAAQ,QAC9BwB,OAAQ,CAAC,OAAQ,KAAM,OAAQ,QAC/Bd,SAAU,QACV+C,OAAQ,CAAC,OAAQ,KAAM,OAAQ,QAC/B9C,MAAO,CAAC,OAAQ,KAAM,OAAQ,QAC9B/D,aAAc,MACdC,SAAU,CAAC,EAAG,KAAM,KAAM,GAC1BP,EAAG,IACH2E,OAAQ,CAAC,IAAM,KAAM,MACrB,UAAW,CACTF,UAAW6D,EAAY,WAAa,eAf1C,eAqBA,cAACa,EAAD,CACEb,UAAWA,EACXC,6BAA8B,kBAAMS,GAAyBV,U,QCpBtDc,EAZK,SAAC,GAAD,IAAG3D,EAAH,EAAGA,QAAH,OAClB,cAAC,IAAD,CACEA,QAASA,EACT8B,QAAQ,YACRlE,GAAI,CACF9C,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,IAJ3B,SAOE,cAAC,IAAD,OCZW,MAA0B,yCC2G1B8I,EAlGE,WACf,MAAgCvE,oBAAS,GAAzC,mBAAOoB,EAAP,KAAiBC,EAAjB,KACMG,EAAcnD,YAAeH,GAMnC,OAAIkD,EACK,cAAC,IAAD,CAAUS,GAAI,MAIrB,qCACE,eAAC,IAAD,CACEtD,GAAI,CACFK,MAAO,OACP5D,eAAgB,gBAChBsE,SAAU,WACVe,IAAK,CAAC,OAAQ,KAAM,OAAQ,OAAQ,QACpCC,GAAI,OANR,UASE,cAAC,EAAD,IACA,cAAC,EAAD,CAAaK,QApBK,WACtBU,GAAaD,SAqBX,cAAC,IAAD,CACE7C,GAAI,CACF6B,OAAQ,QACRxB,MAAO,OACP0B,GAAI,MACJkE,GAAI,CAAC,MAAO,KAAM,KAAM,KAAM,QAC9BC,GAAI,CAAC,MAAO,KAAM,KAAM,KAAM,QAC9BxJ,WAAY,SACZuH,UAAW,UARf,SAWE,eAAC,IAAD,CACEjE,GAAI,CACFe,SAAU,WACVoF,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,MAC/BtE,OAAQ,CAAC,MAAO,KAAM,KAAM,KAAM,QAClCxB,MAAO,OACPC,cAAe,CAAC,SAAU,KAAM,KAAM,KAAM,OAC5C7D,eAAgB,gBAChBC,WAAY,SACZ0J,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,WATxC,UAYE,eAAC,IAAD,CACEpG,GAAI,CACFK,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,SAChCwB,OAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,SACjCd,SAAU,WACVpE,EAAG,CAAC,KAAM,KAAM,KAAM,KAAM,gBAC5BM,aAAc,MACdqD,cAAe,SACf7D,eAAgB,SAChBC,WAAY,CAAC,KAAM,KAAM,KAAM,KAAM,UACrCE,GAAI,CAAC,KAAM,KAAM,KAAM,KAAM,WAC7BN,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,eAXpC,UAcE,cAAC,IAAD,CACEyD,GAAG,KACHC,GAAI,CACF9C,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GACvBZ,MAAO,CAAC,UAAW,KAAM,KAAM,KAAM,eAJzC,SAOG2G,EAAYd,KAAOc,EAAYd,KAAO,UAEzC,cAAC,IAAD,CACEnC,GAAI,CACF6B,OAAQ,MACRxB,MAAO,CAAC,OAAQ,KAAM,OACtBY,GAAI,OACJ/D,SAAU,CAAC,KAAM,EAAG,EAAG,EAAG,GAC1B0G,SAAU,UANd,SASGX,EAAY/D,WAGjB,cAAC,IAAD,CACEc,GAAI,CACFK,MAAO,CAAC,OAAQ,KAAM,KAAM,KAAM,WAClCwD,QAAS,IAHb,SAME,cAAC,IAAD,CAAO7D,GAAI,CAAEK,MAAO,CAAC,OAAQ,KAAM,KAAM,KAAM,QAAUgG,IAAKC,e,QC/FpEC,EAAUC,YAAU,CACxBC,KAAM,CAAErF,UAAW,gBACnBkC,GAAI,CAAElC,UAAW,oBA0BJsF,EAvBG,kBAChB,cAAC,IAAD,CACE1G,GAAI,CACFtD,WAAY,SACZD,eAAgB,SAChBsE,SAAU,WACVV,MAAO,QACPwB,OAAQ,QACRjF,GAAI,UACJ,QAAS,CACPyD,MAAO,OACPwB,OAAQ,OACR4C,OAAQ,iBACRxH,aAAc,MACd0J,UAAU,GAAD,OAAKJ,EAAL,+CACThJ,YAAa,6CAdnB,SAkBE,2BCPWqJ,EAbH,kBACV,cAAC,IAAD,UACE,cAAC,IAAD,CAAe1F,MAAOA,EAAtB,SACE,cAAC,IAAD,UACE,eAAC,IAAM2F,SAAP,CAAgBC,SAAU,cAAC,EAAD,IAA1B,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAWvB,IAC3C,cAAC,IAAD,CAAOsB,KAAK,kBAAkBC,UAAWjB,cCTnDkB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.89a7dc89.chunk.js","sourcesContent":["export default {\r\n  colors: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    primary: '#07c',\r\n  },\r\n  fonts: {\r\n    body: 'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif',\r\n    heading: 'inherit',\r\n  },\r\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64],\r\n  fontWeights: {\r\n    regular: 400,\r\n    bold: 700,\r\n  },\r\n  text: {\r\n    heading: {\r\n      fontWeight: 'bold',\r\n      color: 'primary',\r\n    },\r\n  },\r\n  buttons: {\r\n    primary: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      p: '5px',\r\n      bg: 'primary',\r\n      color: 'background',\r\n      outlineColor: 'primary',\r\n      transitionDuration: '.2s',\r\n      cursor: 'pointer',\r\n    },\r\n    secondary: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      p: '5px',\r\n      borderRadius: '50%',\r\n      outlineColor: 'primary',\r\n      transitionDuration: '.2s',\r\n      cursor: 'pointer',\r\n      fontSize: 3,\r\n      bg: 'background',\r\n      color: 'primary',\r\n    },\r\n  },\r\n  forms: {\r\n    label: {\r\n      fontWeight: 'bold',\r\n    },\r\n    input: {\r\n      borderBottom: '1px solid',\r\n      borderColor: 'primary',\r\n      outlineColor: 'primary',\r\n      boxShadow: 'primary',\r\n    },\r\n    textarea: {\r\n      fontFamily: 'body',\r\n      borderBottom: '1px solid',\r\n      borderColor: 'primary',\r\n      outlineColor: 'primary',\r\n      boxShadow: 'primary',\r\n      resize: 'none',\r\n    },\r\n  },\r\n  shadows: {\r\n    primary: '0 10px 30px -10px hsla(0, 0%, 0%, 0.2)',\r\n  },\r\n  styles: {\r\n    root: {\r\n      fontFamily: 'body',\r\n      fontWeight: 'regular',\r\n    },\r\n  },\r\n  breakpoints: ['360px', '768px', '1024px', '1200px'],\r\n};\r\n","import { atom, selector } from 'recoil';\r\n\r\nexport const toDosState = atom({\r\n  key: 'toDosState',\r\n  default: selector({\r\n    key: 'toDosSelector',\r\n    get: async () => {\r\n      const response = await fetch('https://gorest.co.in/public-api/todos');\r\n      const { data } = await response.json();\r\n      return data;\r\n    },\r\n  }),\r\n});\r\n\r\nexport const todoListFilterState = atom({\r\n  key: 'todoListFilterState',\r\n  default: 'Show All',\r\n});\r\n\r\nexport const searchInputValueState = atom({\r\n  key: 'searchInputValue',\r\n  default: '',\r\n});\r\n\r\nexport const filteredTodoListState = selector({\r\n  key: 'filteredTodoListState',\r\n  get: ({ get }) => {\r\n    const filter = get(todoListFilterState);\r\n    const list = get(toDosState);\r\n    const inputValue = get(searchInputValueState);\r\n\r\n    switch (filter) {\r\n      case 'Show Completed':\r\n        return list.filter(\r\n          ({ completed, title }) => completed && title.includes(inputValue.toLowerCase()),\r\n        );\r\n      case 'Show Uncompleted':\r\n        return list.filter(\r\n          ({ completed, title }) => !completed && title.includes(inputValue.toLowerCase()),\r\n        );\r\n      case 'Search by content':\r\n        return list.filter(({ title }) => title.toLowerCase().includes(inputValue.toLowerCase()));\r\n      default:\r\n        return list;\r\n    }\r\n  },\r\n});\r\n\r\nexport const toDoListDetailsState = selector({\r\n  key: 'todoListStatsState',\r\n  get: ({ get }) => {\r\n    const todoList = get(toDosState);\r\n    const totalNum = todoList.length;\r\n    const totalCompletedNum = todoList.filter(({ completed }) => completed).length;\r\n    const totalUncompletedNum = totalNum - totalCompletedNum;\r\n\r\n    return {\r\n      totalNum,\r\n      totalCompletedNum,\r\n      totalUncompletedNum,\r\n    };\r\n  },\r\n});\r\n\r\nexport const currentItemState = atom({\r\n  key: 'currentItemState',\r\n  default: {},\r\n});\r\n\r\nexport const charCountState = atom({\r\n  key: 'charCountState',\r\n  default: selector({\r\n    key: 'charCountSelector',\r\n    get: ({ get }) => {\r\n      const text = get(currentItemState);\r\n\r\n      return text.length;\r\n    },\r\n  }),\r\n});\r\n","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { toDoListDetailsState } from 'atoms/atoms';\r\nimport { Paragraph } from 'theme-ui';\r\n\r\nconst Details = () => {\r\n  const { totalNum, totalCompletedNum, totalUncompletedNum } = useRecoilValue(toDoListDetailsState);\r\n\r\n  return (\r\n    <ul>\r\n      <Paragraph as=\"li\" sx={{ listStyle: 'none' }}>\r\n        Total items: {totalNum}\r\n      </Paragraph>\r\n      <Paragraph as=\"li\" sx={{ listStyle: 'none' }}>\r\n        Items completed: {totalCompletedNum}\r\n      </Paragraph>\r\n      <Paragraph as=\"li\" sx={{ listStyle: 'none' }}>\r\n        Items not completed: {totalUncompletedNum}\r\n      </Paragraph>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import React from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { todoListFilterState } from 'atoms/atoms';\r\nimport { Flex, Label, Select } from 'theme-ui';\r\n\r\nconst Filter = () => {\r\n  const [filter, setFilter] = useRecoilState(todoListFilterState);\r\n\r\n  const updateFilter = ({ target: { value } }) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      sx={{\r\n        width: '40%',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <Label\r\n        htmlFor=\"select\"\r\n        sx={{\r\n          mb: '10px',\r\n          fontWeight: 'regular',\r\n        }}\r\n      >\r\n        Filter:\r\n      </Label>\r\n      <Select\r\n        id=\"select\"\r\n        onChange={updateFilter}\r\n        value={filter}\r\n        sx={{ p: '10px', outlineColor: 'primary' }}\r\n      >\r\n        <option value=\"Search by content\">All</option>\r\n        <option value=\"Show Completed\">Completed</option>\r\n        <option value=\"Show Uncompleted\">Uncompleted</option>\r\n      </Select>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { Flex } from 'theme-ui';\r\nimport Details from 'components/Details/Details';\r\nimport Filter from 'components/Filter/Filter';\r\n\r\nconst DetailsPanel = ({ isOpen }) => (\r\n  <Flex\r\n    sx={{\r\n      position: 'fixed',\r\n      right: 0,\r\n      width: ['100%', null, null, '70%', '50%'],\r\n      p: '20px',\r\n      mt: '10vh',\r\n      borderBottom: (theme) => `5px solid ${theme.colors.primary}`,\r\n      borderLeft: (theme) => [null, null, null, `5px solid ${theme.colors.primary}`],\r\n      flexDirection: ['column', null, 'row'],\r\n      alignItems: 'center',\r\n      justifyContent: 'space-around',\r\n      fontSize: [null, null, 4],\r\n      bg: 'background',\r\n      color: 'primary',\r\n      transform: isOpen ? 'translateY(0)' : 'translateY(-105%)',\r\n      transition: 'transform .3s ease-in-out',\r\n      zIndex: 999,\r\n    }}\r\n  >\r\n    <Filter />\r\n    <Details />\r\n  </Flex>\r\n);\r\n\r\nexport default DetailsPanel;\r\n","import React from 'react';\r\nimport { Box, Text } from 'theme-ui';\r\n\r\nconst Logo = () => (\r\n  <Box\r\n    sx={{\r\n      fontWeight: 'bold',\r\n      fontSize: [3, null, 4, 5],\r\n    }}\r\n  >\r\n    <Text>WHAT </Text>\r\n    <Text\r\n      sx={{\r\n        color: 'primary',\r\n      }}\r\n    >\r\n      TO DO\r\n    </Text>\r\n  </Box>\r\n);\r\n\r\nexport default Logo;\r\n","import React, { useState } from 'react';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { searchInputValueState, todoListFilterState } from 'atoms/atoms';\r\nimport { Grid, Input, Button } from 'theme-ui';\r\nimport DetailsPanel from 'components/DetailsPanel/DetailsPanel';\r\nimport { BsArrowDown as ArrowIcon } from 'react-icons/bs';\r\nimport Logo from 'components/Logo/Logo';\r\n\r\nconst Navigation = () => {\r\n  const [isOpen, setDetailsBoxOpen] = useState(false);\r\n  const setSearchInput = useSetRecoilState(searchInputValueState);\r\n  const setFilter = useSetRecoilState(todoListFilterState);\r\n\r\n  const handleInputChange = ({ target: { value } }) => {\r\n    setSearchInput(value);\r\n  };\r\n\r\n  const updateFilter = ({ target: { name } }) => {\r\n    setFilter(name);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DetailsPanel isOpen={isOpen} />\r\n      <Grid\r\n        as=\"nav\"\r\n        sx={{\r\n          width: '100vw',\r\n          height: '10vh',\r\n          position: 'fixed',\r\n          top: 0,\r\n          px: '3vw',\r\n          gridTemplateColumns: ['0.3fr 0.7fr 0.25fr', null, 'repeat(3, 1fr)'],\r\n          alignItems: 'center',\r\n          justifyItems: 'center',\r\n          backgroundColor: 'background',\r\n          boxShadow: 'primary',\r\n          zIndex: 1000,\r\n        }}\r\n      >\r\n        <Logo />\r\n        <Input\r\n          name=\"Search by content\"\r\n          onClick={updateFilter}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Search\"\r\n          sx={{\r\n            width: ['100%', null, null, null, '60%'],\r\n            fontSize: [2, null, 4],\r\n          }}\r\n        />\r\n        <Button\r\n          onClick={() => setDetailsBoxOpen(!isOpen)}\r\n          sx={{\r\n            width: ['40px', null, '45px', '50px'],\r\n            height: ['40px', null, '45px', '50px'],\r\n            borderRadius: '50%',\r\n            fontSize: [5, 7],\r\n            transform: isOpen ? 'rotate(180deg)' : 'rotate(0)',\r\n            transition: 'transform .3s ease-in-out',\r\n          }}\r\n        >\r\n          <ArrowIcon />\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useRecoilState, useSetRecoilState } from 'recoil';\r\nimport { toDosState, currentItemState, charCountState } from 'atoms/atoms';\r\nimport { Card, Textarea as ToDoContent, Flex, Heading, Button, Text } from 'theme-ui';\r\nimport { MdDone as DoneIcon } from 'react-icons/md';\r\nimport { AiFillDelete as RemoveIcon } from 'react-icons/ai';\r\nimport { BiShow as InfoIcon } from 'react-icons/bi';\r\n\r\nconst removeItemAtIndex = (arr, index) => [...arr.slice(0, index), ...arr.slice(index + 1)];\r\n\r\nconst replaceItemAtIndex = (arr, index, newValue) => [\r\n  ...arr.slice(0, index),\r\n  newValue,\r\n  ...arr.slice(index + 1),\r\n];\r\n\r\nconst ToDoItem = ({ item }) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [todoList, setTodoList] = useRecoilState(toDosState);\r\n  const [currentItem, setCurrentItem] = useRecoilState(currentItemState);\r\n  const setCharCounter = useSetRecoilState(charCountState);\r\n  const index = todoList.findIndex((listItem) => listItem === item);\r\n\r\n  const deleteItem = () => {\r\n    const newList = removeItemAtIndex(todoList, index);\r\n    setTodoList(newList);\r\n  };\r\n\r\n  const editItemText = (value) => {\r\n    const newList = replaceItemAtIndex(todoList, index, {\r\n      ...currentItem,\r\n      title: value,\r\n    });\r\n    setTodoList(newList);\r\n  };\r\n\r\n  const toggleItemCompletion = () => {\r\n    const newList = replaceItemAtIndex(todoList, index, {\r\n      ...item,\r\n      completed: !item.completed,\r\n    });\r\n    setTodoList(newList);\r\n  };\r\n\r\n  const handleCardClick = ({ target }) => {\r\n    const { id } = target.closest('li');\r\n    const currentItem = todoList.find((toDo) => toDo.id.toString() === id);\r\n    setId(id);\r\n    setCurrentItem(currentItem);\r\n    setCharCounter(currentItem.title.length);\r\n  };\r\n\r\n  const handleRedirect = () => {\r\n    setRedirect(!redirect);\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to={`/WHAT-TO-DO/${id}`} />;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      onClick={handleCardClick}\r\n      as=\"li\"\r\n      id={item.id}\r\n      completed={item.completed}\r\n      sx={{\r\n        position: 'relative',\r\n        height: ['30vh', null, '25vh'],\r\n        width: ['100%', null, '40vw', '25vw'],\r\n        display: 'grid',\r\n        gridTemplateRows: '0.2fr 1fr',\r\n        mb: '20px',\r\n        boxShadow: 'primary',\r\n        transition: 'transform .2s',\r\n        overflow: 'hidden',\r\n        opacity: item.completed && 0.5,\r\n        cursor: 'pointer',\r\n        '&:hover': { transform: 'scale(1.03)', opacity: item.completed && 1 },\r\n      }}\r\n    >\r\n      <Text sx={{ position: 'absolute', bottom: '5px', right: '5px', fontSize: 1 }}>\r\n        Chars: {item.title.length}\r\n      </Text>\r\n      <Flex\r\n        as=\"header\"\r\n        sx={{\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          px: '10px',\r\n          py: '5px',\r\n          borderEndEndRadius: '20px',\r\n          backgroundColor: 'primary',\r\n          color: 'background',\r\n        }}\r\n      >\r\n        <Heading\r\n          sx={{\r\n            color: 'background',\r\n            width: '75%',\r\n            fontSize: [null, null, 5],\r\n            overflowX: 'hidden',\r\n          }}\r\n        >\r\n          {item.name ? item.name : 'To Do'}\r\n        </Heading>\r\n\r\n        <Flex>\r\n          <Button\r\n            onClick={handleRedirect}\r\n            variant=\"secondary\"\r\n            sx={{\r\n              mr: '10px',\r\n            }}\r\n          >\r\n            <InfoIcon />\r\n          </Button>\r\n          <Button\r\n            value=\"itemAction\"\r\n            onClick={deleteItem}\r\n            variant=\"secondary\"\r\n            sx={{\r\n              mr: '10px',\r\n              '&:hover': { color: 'red' },\r\n            }}\r\n          >\r\n            <RemoveIcon />\r\n          </Button>\r\n          <Button\r\n            value=\"itemAction\"\r\n            onClick={toggleItemCompletion}\r\n            variant=\"secondary\"\r\n            sx={{\r\n              bg: item.completed && '#56E39F',\r\n              color: item.completed && 'background',\r\n              '&:hover': { backgroundColor: '#56E39F', color: 'background' },\r\n            }}\r\n          >\r\n            <DoneIcon />\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n      <ToDoContent\r\n        defaultValue={item.title}\r\n        onChange={({ target: { value } }) => editItemText(value)}\r\n        sx={{\r\n          width: '100%',\r\n          height: '100%',\r\n          alignSelf: 'center',\r\n          border: 'none',\r\n          p: '30px',\r\n          lineHeight: '100%',\r\n          fontSize: [null, 3, 3, 4],\r\n          outlineColor: 'transparent',\r\n        }}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ToDoItem;\r\n","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { filteredTodoListState } from 'atoms/atoms';\r\nimport { Flex, Grid } from 'theme-ui';\r\nimport ToDoItem from 'components/ToDoItem/ToDoItem';\r\n\r\nconst ToDoList = () => {\r\n  const toDos = useRecoilValue(filteredTodoListState);\r\n  const toDosItems = toDos.map((item) => <ToDoItem key={item.id} item={item} />);\r\n\r\n  return (\r\n    <Flex\r\n      as=\"main\"\r\n      sx={{\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Grid\r\n        as=\"ul\"\r\n        sx={{\r\n          width: ['100%', null, '90%'],\r\n          minHeight: '90vh',\r\n          gridTemplateColumns: ['1fr', null, 'repeat(2, 1fr)', 'repeat(3, 1fr)'],\r\n          gap: [null, null, '50px'],\r\n          mt: '10vh',\r\n          px: ['3vw', null, 0],\r\n          py: '5vw',\r\n          alignItems: 'center',\r\n          justifyItems: 'center',\r\n          zIndex: 1,\r\n        }}\r\n      >\r\n        {toDosItems}\r\n      </Grid>\r\n    </Flex>\r\n  );\r\n};\r\nexport default ToDoList;\r\n","import React, { useState } from 'react';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { toDosState } from 'atoms/atoms';\r\nimport { Container, Grid, Label, Close, Textarea, Input, Button, Heading, Flex } from 'theme-ui';\r\n\r\nlet id = 1000;\r\nconst getId = () => id++;\r\n\r\nconst Sidebar = ({ isVisible, toggleNewItemBarVisibilityFn }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [textAreaValue, setTextAreaValue] = useState('');\r\n  const setToDos = useSetRecoilState(toDosState);\r\n\r\n  const addNewToDo = () => {\r\n    textAreaValue &&\r\n      setToDos((prevState) => [\r\n        {\r\n          id: getId(),\r\n          name: inputValue ? inputValue : 'To Do',\r\n          title: textAreaValue,\r\n          completed: false,\r\n        },\r\n        ...prevState,\r\n      ]);\r\n    setTextAreaValue('');\r\n    setInputValue('');\r\n  };\r\n\r\n  const handleInputChange = ({ target: { value } }) => {\r\n    setInputValue(value);\r\n  };\r\n  const handleTextAreaChange = ({ target: { value } }) => {\r\n    setTextAreaValue(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        sx={{\r\n          width: ['100vw', null, '60vw', null, '30vw'],\r\n          height: '100vh',\r\n          position: 'fixed',\r\n          top: 0,\r\n          right: 0,\r\n          gridTemplateRows: ['0.1fr  2fr', null, '0.05fr 0.8fr '],\r\n          px: ['3vw', null, null, '5vw'],\r\n          py: '20px',\r\n          borderLeft: [null, null, '10px solid'],\r\n          borderColor: 'primary',\r\n          bg: 'background',\r\n          color: 'primary',\r\n          transform: isVisible ? 'translateX(0)' : 'translateX(100%)',\r\n          transition: 'transform .3s ease-in-out',\r\n          zIndex: 1000,\r\n        }}\r\n      >\r\n        <Flex\r\n          sx={{\r\n            width: '100%',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            borderBottom: '2px solid',\r\n            borderColor: 'primary',\r\n          }}\r\n        >\r\n          <Heading\r\n            as=\"h3\"\r\n            sx={{\r\n              fontSize: [1, 2, 3, 4, 2],\r\n            }}\r\n          >\r\n            new ToDo\r\n          </Heading>\r\n          <Close\r\n            onClick={toggleNewItemBarVisibilityFn}\r\n            sx={{\r\n              cursor: 'pointer',\r\n              transition: ' transform .2s',\r\n              '&:hover': {\r\n                transform: 'scale(1.5)',\r\n              },\r\n            }}\r\n          />\r\n        </Flex>\r\n        <Grid\r\n          sx={{\r\n            gridTemplateRows: ['0.1fr 0.9fr 0.2fr', null, '0.1fr 0.9fr 0.1fr'],\r\n            mt: ['20px', null, '100px'],\r\n          }}\r\n        >\r\n          <Container\r\n            sx={{\r\n              alignContent: 'center',\r\n            }}\r\n          >\r\n            <Label\r\n              sx={{\r\n                fontSize: [3, 4, 5, null, 4],\r\n                mb: '5px',\r\n              }}\r\n            >\r\n              Title:\r\n            </Label>\r\n            <Input\r\n              onChange={handleInputChange}\r\n              value={inputValue}\r\n              placeholder=\"To Do\"\r\n              sx={{\r\n                fontSize: [2, 3, 4, null, 3],\r\n                bg: 'background',\r\n              }}\r\n            />\r\n          </Container>\r\n          <Container>\r\n            <Label\r\n              sx={{\r\n                fontSize: [3, 4, 5, null, 4],\r\n                mb: '5px',\r\n              }}\r\n            >\r\n              Text:\r\n            </Label>\r\n            <Textarea\r\n              value={textAreaValue}\r\n              onChange={handleTextAreaChange}\r\n              sx={{\r\n                height: '90%',\r\n                fontSize: [2, 3, 4, null, 3],\r\n                bg: 'background',\r\n              }}\r\n            />\r\n          </Container>\r\n          <Button\r\n            onClick={() => {\r\n              addNewToDo();\r\n              toggleNewItemBarVisibilityFn();\r\n            }}\r\n            variant=\"secondary\"\r\n            sx={{\r\n              width: '30%',\r\n              height: ['40px', null, null, '55px', '40px'],\r\n              alignSelf: 'center',\r\n              borderRadius: '5px',\r\n              mx: 'auto',\r\n              fontSize: [null, null, 4, 5, 4],\r\n              bg: 'primary',\r\n              color: 'background',\r\n              boxShadow: 'primary',\r\n              '&:hover': {\r\n                transform: 'scale(1.1)',\r\n              },\r\n            }}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'theme-ui';\r\nimport Navigation from 'components/Navigation/Navigation';\r\nimport ToDoList from 'components/ToDoList/ToDoList';\r\nimport NewItemBar from 'components/NewItemBar/NewItemBar';\r\n\r\nconst UserPage = () => {\r\n  const [isVisible, setNewItemBarVisibility] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <ToDoList />\r\n      <Button\r\n        onClick={(e) => {\r\n          isVisible ? e.preventDefault() : setNewItemBarVisibility(!isVisible);\r\n        }}\r\n        sx={{\r\n          width: ['60px', null, '70px', '80px'],\r\n          height: ['60px', null, '70px', '80px'],\r\n          position: 'fixed',\r\n          bottom: ['15px', null, '25px', '30px'],\r\n          right: ['15px', null, '25px', '30px'],\r\n          borderRadius: '50%',\r\n          fontSize: [6, null, null, 7],\r\n          p: '0',\r\n          zIndex: [1000, null, 1001],\r\n          '&:hover': {\r\n            transform: isVisible ? 'scale(1)' : 'scale(1.1)',\r\n          },\r\n        }}\r\n      >\r\n        +\r\n      </Button>\r\n      <NewItemBar\r\n        isVisible={isVisible}\r\n        toggleNewItemBarVisibilityFn={() => setNewItemBarVisibility(!isVisible)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React from 'react';\r\nimport { Button } from '@theme-ui/components';\r\nimport { GrClose as CloseIcon } from 'react-icons/gr';\r\n\r\nconst CloseButton = ({ onClick }) => (\r\n  <Button\r\n    onClick={onClick}\r\n    variant=\"secondary\"\r\n    sx={{\r\n      fontSize: [3, 4, 5, 6, 5],\r\n    }}\r\n  >\r\n    <CloseIcon />\r\n  </Button>\r\n);\r\n\r\nexport default CloseButton;\r\n","export default __webpack_public_path__ + \"static/media/illustration.07ed72e9.svg\";","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { currentItemState } from 'atoms/atoms';\r\nimport { Container, Flex, Paragraph, Image, Heading } from '@theme-ui/components';\r\nimport CloseButton from 'components/CloseButton/CloseButton';\r\nimport Illustration from 'assets/images/illustration.svg';\r\nimport Logo from 'components/Logo/Logo';\r\n\r\nconst ItemPage = () => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const currentItem = useRecoilValue(currentItemState);\r\n\r\n  const handlePageClose = () => {\r\n    setRedirect(!redirect);\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to={'/'} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        sx={{\r\n          width: '100%',\r\n          justifyContent: 'space-between',\r\n          position: 'absolute',\r\n          top: ['15px', null, '25px', '35px', '45px'],\r\n          px: '3vw',\r\n        }}\r\n      >\r\n        <Logo />\r\n        <CloseButton onClick={handlePageClose} />\r\n      </Flex>\r\n      <Flex\r\n        sx={{\r\n          height: '100vh',\r\n          width: '100%',\r\n          px: '3vw',\r\n          pt: ['2vh', null, null, null, '10vh'],\r\n          pb: ['2vh', null, null, null, '10vh'],\r\n          alignItems: 'center',\r\n          overflowX: 'hidden',\r\n        }}\r\n      >\r\n        <Flex\r\n          sx={{\r\n            position: 'relative',\r\n            left: [null, null, null, null, '5%'],\r\n            height: ['65%', null, null, null, '100%'],\r\n            width: '100%',\r\n            flexDirection: ['column', null, null, null, 'row'],\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            textAlign: [null, null, null, null, 'center'],\r\n          }}\r\n        >\r\n          <Flex\r\n            sx={{\r\n              width: [null, null, null, null, '620px'],\r\n              height: [null, null, null, null, '450px'],\r\n              position: 'relative',\r\n              p: [null, null, null, null, '120px 30px 0'],\r\n              borderRadius: '50%',\r\n              flexDirection: 'column',\r\n              justifyContent: 'center',\r\n              alignItems: [null, null, null, null, 'center'],\r\n              bg: [null, null, null, null, 'primary'],\r\n              color: [null, null, null, null, 'background'],\r\n            }}\r\n          >\r\n            <Heading\r\n              as=\"h2\"\r\n              sx={{\r\n                fontSize: [4, 5, 6, 7, 6],\r\n                color: ['primary', null, null, null, 'background'],\r\n              }}\r\n            >\r\n              {currentItem.name ? currentItem.name : 'To Do'}\r\n            </Heading>\r\n            <Paragraph\r\n              sx={{\r\n                height: '70%',\r\n                width: ['100%', null, '80%'],\r\n                mt: '30px',\r\n                fontSize: [null, 3, 4, 5, 4],\r\n                overflow: 'hidden',\r\n              }}\r\n            >\r\n              {currentItem.title}\r\n            </Paragraph>\r\n          </Flex>\r\n          <Container\r\n            sx={{\r\n              width: ['100%', null, null, null, 'primary'],\r\n              opacity: 0.4,\r\n            }}\r\n          >\r\n            <Image sx={{ width: ['100%', null, null, null, '60%'] }} src={Illustration} />\r\n          </Container>\r\n        </Flex>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemPage;\r\n","import React from 'react';\r\nimport { Flex } from 'theme-ui';\r\nimport { keyframes } from '@emotion/react';\r\n\r\nconst preload = keyframes({\r\n  from: { transform: 'rotate(0deg)' },\r\n  to: { transform: 'rotate(360deg)' },\r\n});\r\n\r\nconst Preloader = () => (\r\n  <Flex\r\n    sx={{\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      position: 'relative',\r\n      width: '100vw',\r\n      height: '100vh',\r\n      bg: 'primary',\r\n      '&>div': {\r\n        width: '64px',\r\n        height: '64px',\r\n        border: '8px solid #fff',\r\n        borderRadius: '50%',\r\n        animation: `${preload} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite`,\r\n        borderColor: '#fff transparent transparent transparent',\r\n      },\r\n    }}\r\n  >\r\n    <div />\r\n  </Flex>\r\n);\r\n\r\nexport default Preloader;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'theme-ui';\nimport theme from 'theme/theme';\nimport UserPage from 'views/UserPage/UserPage';\nimport ItemPage from 'views/ItemPage/ItemPage';\nimport Preloader from 'components/Preloader/Preloader';\n\nconst App = () => (\n  <Router>\n    <ThemeProvider theme={theme}>\n      <Switch>\n        <React.Suspense fallback={<Preloader />}>\n          <Route exact path=\"/WHAT-TO-DO\" component={UserPage} />\n          <Route path=\"/WHAT-TO-DO/:id\" component={ItemPage} />\n        </React.Suspense>\n      </Switch>\n    </ThemeProvider>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\nimport App from './App';\n\nReactDOM.render(\n  <RecoilRoot>\n    <App />\n  </RecoilRoot>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}